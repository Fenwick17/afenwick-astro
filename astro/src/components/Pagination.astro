---
const { length, currentUrl, currentPage, firstUrl, prevUrl, nextUrl, lastUrl } = Astro.props;
const paginationList = Array.from({ length: `${length}` }, (_, i) => i + 1);
---

<nav aria-label="Blog pages" class="pagination pagination-default">
  {
    firstUrl !== currentUrl &&
      <a href={prevUrl} class="flex items-center">
        <svg class="mr-2" xmlns="http://www.w3.org/2000/svg" height="13" width="15" aria-hidden="true" focusable="false" viewBox="0 0 15 13">
          <path d="m6.5938-0.0078125-6.7266 6.7266 6.7441 6.4062 1.377-1.449-4.1856-3.9768h12.896v-2h-12.984l4.2931-4.293-1.414-1.414z"></path>
        </svg>
        Previous 
      </a>
  }

  <!-- {
    prevUrl ? (
      <a href={prevUrl} class="pagination__link">
        &lt;
      </a>
    ) : (
      <span class="pagination__link disabled">
        &lt;
      </span>
    )
  }

  {
    !nextUrl ? (
      <span class="pagination__link disabled">
        &gt;
      </span>
    ) : (
      <a href={nextUrl} class="pagination__link">
        &gt;
      </a>
    )
  } -->

  {
    lastUrl !== currentUrl &&
      <a href={nextUrl} class="flex items-center">
        Next
        <svg class="ml-2" xmlns="http://www.w3.org/2000/svg" height="13" width="15" aria-hidden="true" focusable="false" viewBox="0 0 15 13">
          <path d="m8.107-0.0078125-1.4136 1.414 4.2926 4.293h-12.986v2h12.896l-4.1855 3.9766 1.377 1.4492 6.7441-6.4062-6.7246-6.7266z"></path>
        </svg>
      </a>
  }
</nav>